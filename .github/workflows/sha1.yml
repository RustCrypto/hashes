name: sha1

on:
  pull_request:
    paths:
      - ".github/workflows/sha1.yml"
      - "sha1/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: sha1

env:
  RUSTFLAGS: "-Dwarnings"
  CARGO_INCREMENTAL: 0

jobs:
  set-msrv:
    uses: RustCrypto/actions/.github/workflows/set-msrv.yml@master
    with:
        # Crate supports MSRV 1.41 without `oid` feature. We test true MSRV
        # in the `test-msrv` job.
        msrv: 1.57.0

  # Builds for no_std platforms
  build:
    needs: set-msrv
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - ${{needs.set-msrv.outputs.msrv}}
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: cargo hack build --target ${{ matrix.target }} --each-feature --exclude-features default,std,asm

  minimal-versions:
    uses: RustCrypto/actions/.github/workflows/minimal-versions.yml@master
    with:
        working-directory: ${{ github.workflow }}

  # Linux tests
  linux:
    needs: set-msrv
    strategy:
      matrix:
        include:
          # 32-bit Linux/x86
          # *** NOTE: Currently broken with `asm` feature enabled! See:
          #     https://github.com/RustCrypto/hashes/issues/251
          #- target: i686-unknown-linux-gnu
          #  rust: ${{needs.set-msrv.outputs.msrv}}
          #  deps: sudo apt update && sudo apt install gcc-multilib
          #- target: i686-unknown-linux-gnu
          #  rust: stable
          #  deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux/x86_64
          - target: x86_64-unknown-linux-gnu
            rust: ${{needs.set-msrv.outputs.msrv}}
          - target: x86_64-unknown-linux-gnu
            rust: stable

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: ${{ matrix.deps }}
      - run: cargo hack test --feature-powerset

  # macOS tests
  macos:
    needs: set-msrv
    strategy:
      matrix:
        rust:
          - ${{needs.set-msrv.outputs.msrv}}
          - stable

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: x86_64-apple-darwin
      - run: cargo test --no-default-features
      - run: cargo test
      - run: cargo test --features asm
      - run: cargo test --all-features

  # Windows tests
  windows:
    needs: set-msrv
    strategy:
      matrix:
        include:
          # 64-bit Windows (GNU)
          # TODO(tarcieri): try re-enabling this when we bump MSRV
          #- target: x86_64-pc-windows-gnu
          #  toolchain: ${{needs.set-msrv.outputs.msrv}}
          - target: x86_64-pc-windows-gnu
            rust: stable

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: msys2/setup-msys2@v2
      - run: cargo test --target ${{ matrix.target }}

  # Cross-compiled tests
  cross:
    strategy:
      matrix:
        rust:
          - 1.51.0 # 1.41-1.50 `--features` can't be used inside virtual manifest
          - stable
        target:
          - aarch64-unknown-linux-gnu
          - mips-unknown-linux-gnu
        features:
          - default
  # **** NOTE: Currently broken with `asm` feature enabled! See:
  #      https://github.com/RustCrypto/hashes/issues/251
  #      include:
  #          - rust: stable
  #            target: aarch64-unknown-linux-gnu
  #            features: asm

    runs-on: ubuntu-latest
    defaults:
      run:
      # Cross mounts only current package, i.e. by default it ignores workspace's Cargo.toml
        working-directory: .
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/cross-tests
        with:
          rust: ${{ matrix.rust }}
          package: ${{ github.workflow }}
          target: ${{ matrix.target }}
          features: ${{ matrix.features }}

  # TODO: remove on MSRV bump to 1.57 or higher
  test-msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.41.0
      - run: cargo test --no-default-features
      - run: cargo test
