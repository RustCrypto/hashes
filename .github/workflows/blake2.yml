name: blake2

on:
  pull_request:
    paths:
      - "blake2/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: blake2

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.41.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: cargo build --no-default-features --release --target ${{ matrix.target }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.41.0 # MSRV
          - stable
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
    - run: cargo test --no-default-features
    - run: cargo test
  simd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-05-01
          override: true
      - run: cargo test --features simd
      - run: cargo test --features simd_opt
      - run: cargo test --features simd_asm

  # Cross-compiled tests
  cross:
    strategy:
      matrix:
        rust:
          - 1.51 # 1.41-1.50 `--features` can't be used inside virtual manifest
          - stable
        target:
          - aarch64-unknown-linux-gnu
          - mips-unknown-linux-gnu
        features:
          - default

    runs-on: ubuntu-latest
    defaults:
      run:
      # Cross mounts only current package, i.e. by default it ignores workspace's Cargo.toml
        working-directory: .
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/cross-tests
        with:
          rust: ${{ matrix.rust }}
          package: ${{ github.workflow }}
          target: ${{ matrix.target }}
          features: ${{ matrix.features }}
